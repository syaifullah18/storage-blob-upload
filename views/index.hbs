<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
<script type="text/javascript">
    var jqueryNoConflict = jQuery;
    var map = new Map();

    function processImage(sourceImageUrl, index) {
        // **********************************************
        // *** Update or verify the following values. ***
        // **********************************************

        // Replace <Subscription Key> with your valid subscription key.
        var subscriptionKey = "ca041fbd6cfa4eeda530e19c6171cbda";

        // You must use the same Azure region in your REST API method as you used to
        // get your subscription keys. For example, if you got your subscription keys
        // from the West US region, replace "westcentralus" in the URL
        // below with "westus".
        //
        // Free trial subscription keys are generated in the "westus" region.
        // If you use a free trial subscription key, you shouldn't need to change
        // this region.
        var uriBase =
                "https://subcompvision.cognitiveservices.azure.com/vision/v2.0/analyze";

        // Request parameters.
        var params = {
            "visualFeatures": "Categories,Description,Color",
            "details": "",
            "language": "en",
        };

        // Display the image.

        // Make the REST API call.
        jqueryNoConflict.ajax({
            url: uriBase + "?" + $.param(params),

            // Request headers.
            beforeSend: function(xhrObj){
                xhrObj.setRequestHeader("Content-Type","application/json");
                xhrObj.setRequestHeader(
                        "Ocp-Apim-Subscription-Key", subscriptionKey);
            },

            type: "POST",

            // Request body.
            data: '{"url": ' + '"' + sourceImageUrl + '"}',
        })

                .done(function(data) {
                    // Show formatted JSON on webpage.
                    var captions = data.description.captions
                    var tag = data.description.tags
                    captionAppare(captions, index)
                    tagAppare(tag, index)
                    map.set(index, data)
                    jqueryNoConflict("#btnresponse"+index).show()
                    // jqueryNoConflict("#response" + index).html("<h6 class=\"card-title\">Response</h6><p class='card-text'>" + JSON.stringify(data, null, 2) + "</p>");

                    // alert("success");
                })

                .fail(function(jqXHR, textStatus, errorThrown) {
                    // Display error message.
                    var errorString = (errorThrown === "") ? "Error. " :
                            errorThrown + " (" + jqXHR.status + "): ";
                    errorString += (jqXHR.responseText === "") ? "" :
                            jQuery.parseJSON(jqXHR.responseText).message;
                    alert(errorString);
                });
    };

    function captionAppare(captions, index) {
        for (i = 0; i < captions.length; i++) {
            document.getElementById("desc" + index).innerHTML = "<h5 class='card-title'>" + captions[i].text + "</h5>";
        }
    }

    function jsonResponse(data) {
        jqueryNoConflict("#tableResponse tbody").html("<tr><td>categories</td><td>" + JSON.stringify(data.categories, null, 2) + "</td></tr>")
        jqueryNoConflict("#tableResponse tbody").append("<tr><td>color</td><td>" + JSON.stringify(data.color, null, 2) + "</td></tr>")
        jqueryNoConflict("#tableResponse tbody").append("<tr><td>description</td><td>" + JSON.stringify(data.description, null, 2) + "</td></tr>")
        jqueryNoConflict("#tableResponse tbody").append("<tr><td>requestId</td><td>" + JSON.stringify(data.requestId, null, 2) + "</td></tr>")
        jqueryNoConflict("#tableResponse tbody").append("<tr><td>metadata</td><td>" + JSON.stringify(data.metadata, null, 2) + "</td></tr>")
    }

    function tagAppare(tag, index) {
        document.getElementById("tag" + index).innerHTML = "<h6 class='card-subtitle mb-2 text-muted'>Tags</h6>"
        for (i = 0; i < tag.length; i++) {
            document.getElementById("tag" + index).innerHTML += "<span  class='badge badge-info'>" + tag[i] + "</span>&nbsp;";
        }
    }

</script>
<div class="container">
<h2 class="center">Dicoding Submition</h2>
<form id="upload-form" action="/upload" method="POST" enctype="multipart/form-data">
  <br/>
  <h3>Select an image to upload:</h3>
  <div class="upload-container"><input id="file-picker" type="file" name="image"></div>
  <div><input type="submit" value="Upload Image"></div>
</form>
<br/>
<p id="message">{{message}}</p>

<h2>Generated Thumbnails</h2>
    <div class="row">
        {{#each this.thumbnails}}
            <div class="col-3 mx-3 my-3">
                <div class="card" style="width: 18rem;">
                  <img src="https://{{../accountName}}.blob.core.windows.net/{{../containerName}}/{{name}}" class="card-img-top" alt="Can't be rendered">
                  <div class="card-body" id="desc{{@key}}">
                  </div>
                    <div id="response{{@key}}">
                    </div>
                    <div id="tag{{@key}}" class="px-3 py-3">
                    </div>
                    <div class="card-footer">
                        <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#exampleModal" id="btnresponse{{@key}}" style="display: none" onclick="jsonResponse(map.get({{@key}}));">
                            Analyze Response
                        </button>
                    </div>
                </div>
            </div>
            <script>
                processImage('https://{{../accountName}}.blob.core.windows.net/{{../containerName}}/{{name}}', {{@key}});
            </script>
        {{/each}}
    </div>

    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Analyze Response</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <table class="table" id="tableResponse">
                        <thead class="thead-light">
                        <tr>
                            <th scope="col">Tag</th>
                            <th scope="col">Body</th>
                        </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

</div>
<script>
  document.addEventListener('DOMContentLoaded', () => {

    const message = document.getElementById('message');
    const picker = document.getElementById('file-picker');

    document.getElementById('upload-form').addEventListener('submit', (e) => {

      message.innerText = '';

      if(!picker.files.length) {
        message.innerText = 'Please select an image to upload.';
        e.preventDefault();
        return false;
      }
    });

  });
</script>
